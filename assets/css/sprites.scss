.potto {
    background: red;
    width: 256px;
    height: 256px;
    background: url(../sprites/potto.webp);
    background-repeat: no-repeat;
    background-position: center;
}

@keyframes dvi {
    from {
        opacity: 0;
        transform: scale(3.3);
    }

    to {
        opacity: 1;
        transform: scale(1);
    }
}

//icons
.iconCircle {
    fill: var(--iconOrnament);
}

.iconMode {
    fill: var(--iconOrnament);
    position: absolute;
}

//properties
.iconSpinner {
    transform: rotate(0deg);
    animation: iconSpinner var(--spinner) infinite steps(15);
    opacity: 1;
}

.iconBoombox {
    transform: scale(1);
    animation: iconBoombox var(--boombox) var(--boombox) infinite steps(5);
    opacity: 0;
}

.iconData {
    fill: none;
    stroke-width: 5.6004;
    stroke: var(--iconOrnament);
    stroke-dasharray: 53;
    stroke-dashoffset: 53;
    opacity: 0;
    animation: iconData var(--spinner) infinite alternate linear;
}

@keyframes iconSpinner {
    from {
        transform: rotate(0deg);
    }

    to {
        transform: rotate(360deg);
    }
}

@keyframes iconBoombox {
    from {
        transform: scale(1);
    }

    90% {
        transform: scale(.8);
    }
}

@keyframes iconData {
    from {
        stroke-dashoffset: 53;
    }

    to {
        stroke-dashoffset: 0;
    }
}

.buttonComponent {
    display: flex;
    align-items: center;
    margin-bottom: 1em;
    //animation: var(--buttonJump);
    width: 500px;
    cursor: pointer;
    transition: all var(--elementTransitionTimer) var(--easingDefault);
}

.box {
    display: flex;
    flex-direction: column;
    width: 900px;
    height: 400px;
    margin-bottom: 1em;
    background: var(--box);
    border: solid 3px var(--boxOutline);
    padding: 20px;
    &:hover {
        animation: borderRGB var(--boombox) infinite linear;
    }
}

.menuButton {
    stroke-width: .7;
    stroke: var(--inactiveStroke);
    fill: var(--inactiveFill);
}

.buttonText {
    position: absolute;
    color: var(--inactiveText);
    font-family: var(--textUX);
    font-size: 3.4rem;
    margin-left: .5em;
    margin-top: .2em;
    user-select: none;
}

.buttonHighlight {
    width: var(--highlightWidth);
    height: 80px;
    animation: var(--brgb);
    transform: var(--inactiveHighlight);
    margin-left: -4em;
    margin-top: .3em;
    z-index: -1;
}

.volName {
    color: var(--inactiveFill);
    font-family: var(--textUX);
    font-weight: 800;
    font-size: 3em;
}
.volVal {
    color: var(--inactiveFill);
    font-family: var(--textUX);
    font-weight: 800;
    margin-left: 1rem;
    font-size: 2em;
    position: absolute;
}
.volume {
    input[type=range] {
        display: none;
    }

    display: flex;
    justify-content: center;
    align-items: center;

    .icon-size {
        font-size: 2rem;
    }

    .bar-hoverbox {
        opacity: 1;
        transition: opacity .2s;

        &:hover .bar .bar-fill {
            animation: flicker var(--boombox) steps(3) infinite;
        }
        &:hover .bar {
               animation: outlineBeat var(--boombox) infinite steps(3);
        }
    }

    .bar {
        background: var(--inactiveFill);
        height: 70px;
        width: 890px;
        overflow: hidden;
        pointer-events: none;
        border: solid 3px black;
        display: flex;
        align-items: center;

        .bar-fill {
            background: var(--bar);
            width: 0%;
            height: 100%;
            background-clip: border-box;
            pointer-events: none;
        }
    }
}


.grid {
    z-index: -5;
    transform: scale(2);
    transform-origin: center;
    animation: fillRGB 15s infinite, randomTranslate 15.0012s infinite cubic-bezier(.31, .01, .7, .99); // random3d 7s infinite cubic-bezier(.72,-0.08,.23,1.09);
    --scale: 1.6;
}

@keyframes randomTranslate {
    0% {
        transform: translate(280px, 200px) rotate3d(0, 1, 0, 20deg) scale(var(--scale));
    }

    25% {
        transform: translate(10px, -200px) scale(var(--scale));
    }

    50% {
        transform: translate(-200px, 170px) rotate3d(1, -1, 0, 25deg) scale(var(--scale));
    }

    75% {
        transform: translate(100px, -90px) scale(var(--scale));
    }

    100% {
        transform: translate(280px, 200px) rotate3d(0, 1, 0, 20deg) scale(var(--scale));
    }
}

@keyframes random3d {
    0% {
        transform: rotate3d(0, 1, 0, 60deg);
    }

    25% {
        transform: rotate3d(0, 1, 0, 60deg);
    }

    50% {
        transform: rotate3d(0, 1, 0, 60deg);
    }

    75% {
        transform: rotate3d(0, 1, 0, 60deg);
    }

    100% {
        transform: rotate3d(0, 1, 0, 60deg);
    }
}